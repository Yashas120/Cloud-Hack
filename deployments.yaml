# note: YAML definitions for multiple components/resources can be bundled together into one YAML file
# '---' is used to separate the definitions of the components/resources

# define the `Deployment` for the mongodb server
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   # creationTimestamp: null
#   labels:
#     app: mongo
#   name: mongo
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: mongo
#   template:
#     metadata:
#       # creationTimestamp: null
#       labels:
#         app: mongo
#     spec:
#       containers:
#       - image: mongo
#         name: mongo
#         imagePullPolicy: Never
#         env:
#         - name: MONGO_INITDB_ROOT_USERNAME
#           valueFrom:
#             secretKeyRef:
#               name: mongo-creds
#               key: username
#         - name: MONGO_INITDB_ROOT_PASSWORD
#           valueFrom:
#             secretKeyRef:
#               name: mongo-creds
#               key: password
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo
        ports:
          - containerPort: 27017
        env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-creds
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-creds
                  key: password  
---
# define the `Deployment` for mongo-express
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: mongo-express-deployment
#   labels:
#     app: mongo-express
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: mongo-express
#   template:
#     metadata:
#       labels:
#         app: mongo-express
#     spec:
#       containers:
#       - name: mongo-express
#         image: mongo-express
#         ports:
#           - containerPort: 8081
#         env:
#         - name: ME_CONFIG_MONGODB_ADMINUSERNAME
#           valueFrom:
#             secretKeyRef:
#               name: mongo-creds
#               key: username
#         - name: ME_CONFIG_MONGODB_ADMINPASSWORD
#           valueFrom:
#             secretKeyRef:
#               name: mongo-creds
#               key: password
#         - name: ME_CONFIG_MONGODB_SERVER
#           valueFrom:
#             configMapKeyRef:
#               name: mongodb-configmap
#               key: database_url 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express-deployment
  labels:
    app: mongo-express
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
      - name: mongo-express
        image: mongo-express
        ports:
          - containerPort: 8081
        env:
          - name: ME_CONFIG_MONGODB_ADMINUSERNAME
            valueFrom:
              secretKeyRef:
                name: mongo-creds
                key: username
          - name: ME_CONFIG_MONGODB_ADMINPASSWORD
            valueFrom:
              secretKeyRef:
                name: mongo-creds
                key: password
          - name: ME_CONFIG_MONGODB_SERVER
            valueFrom:
              configMapKeyRef:
                name: mongodb-configmap
                key: database_url 
---
# define the `Deployment` for flask-app


apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapi
  labels:
    app: flaskapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flaskapi
  template:
    metadata:
      labels:
        app: flaskapi
    spec:
      containers:
        - name: flaskapi
          image: flask-app-image
          imagePullPolicy: Never
          ports:
            - containerPort: 5001
          # env:
          # - name: db_root_password
          #   valueFrom:
          #     secretKeyRef:
          #       name: mongo-creds
          #       key: db_root_password
          # - name: db_name
          #   value: flaskapi

---
# set ImagePullPolicy to 'Never' to allow the use of the locally built image